import os, asyncio
from dictionary import AdressBook
from bot import request_confirmation, start_bot

clear = lambda: os.system('cls' if os.name == 'nt' else 'clear') # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —ç–∫—Ä–∞–Ω–∞

check = '–Ω–∞ –≤—ã—Ä–æ—Å—Ç'
smsVerify = None
emailVerify = None
secondWalletVerify = None



# ‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è Telegram-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
async def tgVerify():
    print("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram...")
    try:
        approved = await request_confirmation()
        return approved
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ Telegram: {e}")
        return False



def askSeed():
    seed = ''
    while seed != 'word word word':
        seed = ' '.join(input('–í–≤–µ–¥–∏—Ç–µ —Å–∏–¥-—Ñ—Ä–∞–∑—É –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∫–æ—à–µ–ª–µ–∫: ').split())
        if seed != 'word word word':
            print('–ù–µ–≤–µ—Ä–Ω–∞—è —Å–∏–¥-—Ñ—Ä–∞–∑–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.\n')
    return seed




def choice():
    choiceVar = input("""–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
      1. –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
      2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤
      –í–∞—à –≤—ã–±–æ—Ä: """)

    while choiceVar not in ["1", "2"]:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n")
        return choice()
    
    return int(choiceVar)




# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤—ã–∑–æ–≤ tgVerify
async def verif():
    global check
    if check == 'suspicious':
        approved = await tgVerify()

        if approved:
            check = 'verified'
            print("‚úÖ –î–æ—Å—Ç—É–ø –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω.")
        else:
            print("‚ùå –î–æ—Å—Ç—É–ø –æ—Ç–∫–ª–æ–Ω—ë–Ω.")
            exit(1)

    elif check == 'verified':
        print("‚úîÔ∏è –£–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ.")

# üëá –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    bot_task = asyncio.create_task(start_bot())  # —Ñ–æ–Ω–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await asyncio.sleep(1)  # –ø–∞—É–∑–∞ –Ω–∞ –∑–∞–ø—É—Å–∫ polling

    askSeed()
    await verif()
    user_choice = choice()
    print(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {user_choice}")

    bot_task.cancel()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n–ó–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
